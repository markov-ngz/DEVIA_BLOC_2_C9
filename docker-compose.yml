services:
  db:
    container_name: api_db
    image: postgres:14-alpine
    volumes:
      - postgres-data:/var/lib/postgresql/data
    #      - ./postgres-data:/var/lib/postgresql/data
    restart: always
    # ports:
    #  - 127.0.0.1:5432:5432
    env_file:
      - .env
    networks:
      net1:
        ipv4_address: 172.20.0.2
  api_model:
    container_name: api_model
    image: markreduce/devia_titre:api_model
    env_file:
      - .env
    volumes:
      - blue-vol:/app/statics
    ports:
      - "127.0.0.1:8000:8000"
    networks:
      net1:
        ipv4_address: 172.20.0.3
    depends_on:
      - db
    restart: always
  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    ports:
    - '3000:3000'
    networks:
      monitoring_net:
        ipv4_address: 172.20.0.4
    volumes:
      - grafana-storage:/var/lib/grafana
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    networks:
      monitoring_net:
        ipv4_address: 172.20.0.5
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus

volumes:
  postgres-data:
    name: "api_db"
  blue-vol:
    external: true
  grafana-storage: {}
  prom_data:
networks:
  net1:
    name: net1
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1

